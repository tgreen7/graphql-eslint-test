import { Location, GraphQLOutputType, GraphQLNamedType, Token } from 'graphql';
import type { Comment, SourceLocation } from 'estree';
import type { AST } from 'eslint';
export declare const valueFromNode: (valueNode: import("graphql").ValueNode, variables?: import("graphql/jsutils/ObjMap").ObjMap<unknown>) => any;
export declare function getBaseType(type: GraphQLOutputType): GraphQLNamedType;
declare type TokenKindValue = '<SOF>' | '!' | '$' | '&' | '(' | ')' | '...' | ':' | '=' | '@' | '[' | ']' | '{' | '|' | '}' | 'Name' | 'Int' | 'Float' | 'String' | 'BlockString' | 'Comment';
export declare function convertToken<T extends 'Line' | 'Block' | TokenKindValue>(token: Token, type: T): Omit<AST.Token, 'type'> & {
    type: T;
};
export declare function extractTokens(filePath: string, code: string): AST.Token[];
export declare function extractComments(loc: Location): Comment[];
export declare function convertLocation(location: Location): SourceLocation;
export {};
